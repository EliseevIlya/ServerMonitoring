import os
import sys
import subprocess
import platform
import shutil

NODE_SCRIPT_NAME = "node.py"
NODE_SERVICE_NAME = "monitoring.service"
VENV_DIR = "venv"


def ask_user(question):
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ (–¥–∞/–Ω–µ—Ç)"""
    answer = input(f"{question} [y/N]: ").strip().lower()
    return answer == "y"


def run_command(command, shell=False):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ"""
    try:
        subprocess.run(command, shell=shell, check=True)
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}")
        sys.exit(1)


def install_virtualenv():
    """–°–æ–∑–¥–∞–µ—Ç –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
    if not ask_user("–°–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏?"):
        return

    print("üì¶ –°–æ–∑–¥–∞—é –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ...")
    run_command([sys.executable, "-m", "venv", VENV_DIR])

    pip_exec = os.path.join(VENV_DIR, "bin", "pip") if platform.system() != "Windows" else os.path.join(VENV_DIR,
                                                                                                        "Scripts",
                                                                                                        "pip.exe")

    print("üìå –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
    run_command([pip_exec, "install", "psutil", "requests"])


def copy_node_script():
    """–ö–æ–ø–∏—Ä—É–µ—Ç –Ω–æ–¥—É –≤ —Å–∏—Å—Ç–µ–º–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é"""
    if not ask_user("–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å–∫—Ä–∏–ø—Ç –Ω–æ–¥—ã –≤ —Å–∏—Å—Ç–µ–º–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é?"):
        return

    target_dir = "/opt/monitoring" if platform.system() != "Windows" else os.path.join(os.environ["ProgramFiles"],
                                                                                       "Monitoring")
    os.makedirs(target_dir, exist_ok=True)

    shutil.copy(NODE_SCRIPT_NAME, os.path.join(target_dir, NODE_SCRIPT_NAME))
    print(f"‚úÖ –§–∞–π–ª {NODE_SCRIPT_NAME} —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ {target_dir}")


def setup_systemd_service():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç systemd-—Å–µ—Ä–≤–∏—Å –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞"""
    if platform.system() != "Linux":
        print("‚ö†Ô∏è Systemd –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –≤ Linux. –ü—Ä–æ–ø—É—Å–∫–∞—é...")
        return

    if not ask_user("–°–æ–∑–¥–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å systemd-—Å–µ—Ä–≤–∏—Å?"):
        return

    service_content = f"""[Unit]
Description=Monitoring Node Service
After=network.target

[Service]
ExecStart=/usr/bin/python3 /opt/monitoring/{NODE_SCRIPT_NAME}
Restart=always
User={os.getlogin()}
WorkingDirectory=/opt/monitoring

[Install]
WantedBy=multi-user.target
"""

    service_path = f"/etc/systemd/system/{NODE_SERVICE_NAME}"

    with open(service_path, "w") as f:
        f.write(service_content)

    print(f"‚úÖ –°–µ—Ä–≤–∏—Å systemd —Å–æ–∑–¥–∞–Ω: {service_path}")

    print("üöÄ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—é systemd...")
    run_command(["sudo", "systemctl", "daemon-reload"])

    print("üîÑ –í–∫–ª—é—á–∞—é –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫...")
    run_command(["sudo", "systemctl", "enable", NODE_SERVICE_NAME])

    print("‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫–∞—é —Å–µ—Ä–≤–∏—Å...")
    run_command(["sudo", "systemctl", "start", NODE_SERVICE_NAME])

    print("‚úÖ –°–µ—Ä–≤–∏—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")


def main():
    print("üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤")

    install_virtualenv()
    copy_node_script()
    setup_systemd_service()

    print("üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")


if __name__ == "__main__":
    main()
